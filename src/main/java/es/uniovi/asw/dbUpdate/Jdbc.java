package es.uniovi.asw.dbUpdate;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class Jdbc {

/*  Configuration for Oracle 
	private static String DRIVER = "oracle.jdbc.driver.OracleDriver";
	private static String URL = "jdbc:oracle:thin:@156.35.94.99:1521:DESA";
	private static String USER = "";
	private static String PASS = "";
*/
/* Configuration for Hsqldb
*/	
//	private static String DRIVER = "org.hsqldb.jdbcDriver";
//	private static String URL = "jdbc:hsqldb:hsql://localhost";
//	private static String USER = "sa";
//	private static String PASS = "";
	
/*
	Configuration for h2
*/
	private static String BD = "h2";
	private static final String DRIVER  ="org.h2.Driver";
	private static String URL = "jdbc:h2:~/test";
	private static String USER = "sa";
	private static String PASS = "";
	
//	static {
//		try {
//			Class.forName( DRIVER );
//		} catch (ClassNotFoundException e) {
//			throw new RuntimeException("Driver not found in classpath", e);
//		}
//	}
	
	static {
		try {
			Class.forName( DRIVER );
			if(BD.equals("h2")){
				
				try {
					crearDB();
				} catch (InstantiationException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IllegalAccessException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			
		} catch (ClassNotFoundException e) {
			throw new RuntimeException("Driver not found in classpath", e);
		}
	}
	
	public static Connection getConnection() throws SQLException {
		return DriverManager.getConnection(URL, USER, PASS);
	}

	private static void crearDB() throws InstantiationException, IllegalAccessException, ClassNotFoundException, SQLException {
		 //ejecutamos el script de creacion de la BD
        String createTables = "CREATE TABLE IF NOT EXISTS CENSOS(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, NOMBRE VARCHAR(255), NIF VARCHAR(255), EMAIL VARCHAR(255), CODCOLEGIOELECTORAL VARCHAR(255), PASSWORD VARCHAR(255))";
        
        Class.forName(DRIVER).newInstance();
        Connection con = getConnection();
        java.sql.Statement stm = con.createStatement();
        stm.execute(createTables);
        stm.execute("truncate table CENSOS");
        stm.close();
        con.close();
		
	}

	/*public static void close(ResultSet rs, Statement st, Connection c) {
		close(rs);
		close(st);
		close(c);
	}

	public static void close(ResultSet rs, Statement st) {
		close(rs);
		close(st);
	}

	protected static void close(ResultSet rs) {
		if (rs != null) try { rs.close(); } catch(SQLException e) {};
	}

	public static void close(Statement st) {
		if (st != null ) try { st.close(); } catch(SQLException e) {};
	}

	public static void close(Connection c) {
		if (c != null) try { c.close(); } catch(SQLException e) {};
	}
*/
	public static Connection createThreadConnection() throws SQLException {
		Connection con = getConnection();
		con.setAutoCommit( false );
		threadConnection.set(con);
		return con;
	}

	private static ThreadLocal<Connection> threadConnection = new ThreadLocal<Connection>();

	public static Connection getCurrentConnection() {
		return threadConnection.get();
	}

}
